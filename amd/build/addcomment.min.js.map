{"version":3,"file":"addcomment.min.js","sources":["../src/addcomment.js"],"sourcesContent":["/**\n * Add comment js logic.\n *\n * @package\n * @subpackage local_modcomments\n * @copyright  2022 Willian Mano {@link https://conecti.me}\n * @author     Willian Mano <willianmanoaraujo@gmail.com>\n */\n/* eslint-disable */\ndefine(['jquery', 'core/ajax', 'local_modcomments/sweetalert'], function($, Ajax, Swal) {\n    var AddComment = function(courseid, cmid, modname) {\n        this.courseid = courseid;\n        this.cmid = cmid;\n        this.modname = modname;\n\n        this.registerEventListeners();\n    };\n\n    /**\n     * @var {int} courseid\n     * @private\n     */\n    AddComment.prototype.courseid = -1;\n\n    /**\n     * @var {int} cmid\n     * @private\n     */\n    AddComment.prototype.cmid = -1;\n\n    /**\n     * @var {string} modname\n     * @private\n     */\n    AddComment.prototype.modname = '';\n\n    AddComment.prototype.registerEventListeners = function() {\n        $(document).on('click', '.post-comment-btn', function(event) {\n            var target = $(event.currentTarget).closest('.input-group').children('.post-comment-input');\n\n            if (target) {\n                this.saveComment(target.html());\n            }\n        }.bind(this));\n    };\n\n    AddComment.prototype.saveComment = function(comment) {\n        if (comment === '') {\n            return;\n        }\n\n        var request = Ajax.call([{\n            methodname: 'local_modcomments_addcomment',\n            args: {\n                courseid: this.courseid,\n                cmid: this.cmid,\n                modname: this.modname,\n                comment: comment\n            }\n        }]);\n\n        request[0].done(function(data) {\n            this.addCommentContainer(data);\n        }.bind(this)).fail(function(error) {\n            var message = error.message;\n\n            if (!message) {\n                message = error.error;\n            }\n\n            this.showToast('error', message);\n        }.bind(this));\n    };\n\n    AddComment.prototype.showToast = function(type, message) {\n        var Toast = Swal.mixin({\n            toast: true,\n            position: 'top-end',\n            showConfirmButton: false,\n            timer: 8000,\n            timerProgressBar: true,\n            onOpen: (toast) => {\n                toast.addEventListener('mouseenter', Swal.stopTimer);\n                toast.addEventListener('mouseleave', Swal.resumeTimer);\n            }\n        });\n\n        Toast.fire({\n            icon: type,\n            title: message\n        });\n    };\n\n    AddComment.prototype.addCommentContainer = function(data) {\n        var targetdiv = $('.comments-container');\n        var userimg = $('.add-comment .userimg').clone();\n        var userfullname = userimg.attr('alt');\n\n        var newcomment = $(\"<div class='comment fadeIn'>\" +\n            \"<div class='userinfo'>\" +\n                \"<div class='userimg'>\" + $('<div/>').append(userimg).html() + \"</div>\" +\n                    \"<div class='nameanddate'>\" +\n                        \"<p class='username'>\" + userfullname + \"</p>\" +\n                        \"<span class='small'>\" + data.humantimecreated + \"</span>\"+\n                    \"</div>\"+\n                \"</div>\"+\n                \"<p class='text'>\" + data.comment + \"</p>\" +\n            \"</div>\");\n\n        targetdiv.prepend(newcomment);\n\n        $('.post-comment-input').empty();\n    };\n\n    return {\n        'init': function(courseid, cmid, modname) {\n            return new AddComment(courseid, cmid, modname);\n        }\n    };\n});\n"],"names":["define","$","Ajax","Swal","AddComment","courseid","cmid","modname","registerEventListeners","prototype","document","on","event","target","currentTarget","closest","children","saveComment","html","bind","this","comment","call","methodname","args","done","data","addCommentContainer","fail","error","message","showToast","type","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","targetdiv","userimg","clone","userfullname","attr","newcomment","append","humantimecreated","prepend","empty"],"mappings":"AASAA,sCAAO,CAAC,SAAU,YAAa,iCAAiC,SAASC,EAAGC,KAAMC,UAC1EC,WAAa,SAASC,SAAUC,KAAMC,cACjCF,SAAWA,cACXC,KAAOA,UACPC,QAAUA,aAEVC,iCAOTJ,WAAWK,UAAUJ,UAAY,EAMjCD,WAAWK,UAAUH,MAAQ,EAM7BF,WAAWK,UAAUF,QAAU,GAE/BH,WAAWK,UAAUD,uBAAyB,WAC1CP,EAAES,UAAUC,GAAG,QAAS,oBAAqB,SAASC,WAC9CC,OAASZ,EAAEW,MAAME,eAAeC,QAAQ,gBAAgBC,SAAS,uBAEjEH,aACKI,YAAYJ,OAAOK,SAE9BC,KAAKC,QAGXhB,WAAWK,UAAUQ,YAAc,SAASI,SACxB,KAAZA,SAIUnB,KAAKoB,KAAK,CAAC,CACrBC,WAAY,+BACZC,KAAM,CACFnB,SAAUe,KAAKf,SACfC,KAAMc,KAAKd,KACXC,QAASa,KAAKb,QACdc,QAASA,YAIT,GAAGI,KAAK,SAASC,WAChBC,oBAAoBD,OAC3BP,KAAKC,OAAOQ,KAAK,SAASC,WACpBC,QAAUD,MAAMC,QAEfA,UACDA,QAAUD,MAAMA,YAGfE,UAAU,QAASD,UAC1BX,KAAKC,QAGXhB,WAAWK,UAAUsB,UAAY,SAASC,KAAMF,SAChC3B,KAAK8B,MAAM,CACnBC,OAAO,EACPC,SAAU,UACVC,mBAAmB,EACnBC,MAAO,IACPC,kBAAkB,EAClBC,OAASL,QACLA,MAAMM,iBAAiB,aAAcrC,KAAKsC,WAC1CP,MAAMM,iBAAiB,aAAcrC,KAAKuC,gBAI5CC,KAAK,CACPC,KAAMZ,KACNa,MAAOf,WAIf1B,WAAWK,UAAUkB,oBAAsB,SAASD,UAC5CoB,UAAY7C,EAAE,uBACd8C,QAAU9C,EAAE,yBAAyB+C,QACrCC,aAAeF,QAAQG,KAAK,OAE5BC,WAAalD,EAAE,0EAEeA,EAAE,UAAUmD,OAAOL,SAAS7B,OAF3C,sDAIsB+B,aAJtB,2BAKsBvB,KAAK2B,iBAL3B,sCAQU3B,KAAKL,QARf,cAWnByB,UAAUQ,QAAQH,YAElBlD,EAAE,uBAAuBsD,SAGtB,MACK,SAASlD,SAAUC,KAAMC,gBACtB,IAAIH,WAAWC,SAAUC,KAAMC"}